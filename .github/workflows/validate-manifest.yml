name: Validate Winget Manifest

on:
  push:
    branches: [main]
    paths:
      - "manifests/**"
  pull_request:
    branches: [main]
    paths:
      - "manifests/**"
  workflow_dispatch:

jobs:
  validate:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Windows Package Manager Manifest Validation
        run: |
          # Install winget-create if not already installed
          if (-not (Get-Command winget-create -ErrorAction SilentlyContinue)) {
            Write-Host "Installing Windows Package Manager Manifest Creator..."
            # You may need to adjust this depending on how you want to install winget-create
            # Option 1: Use Microsoft.WinGet.Client PowerShell module
            Install-Module Microsoft.WinGet.Client -Force -AllowPrerelease
          }
        shell: pwsh

      - name: Validate manifests
        run: |
          # Get all manifest version directories
          $manifestDirs = Get-ChildItem -Path ".\manifests\t\TestFiesta\TacoTruck" -Directory

          foreach ($dir in $manifestDirs) {
            $version = $dir.Name
            Write-Host "Validating manifest for version $version..."
            
            # Use the correct validation command
            & winget validate --manifest "$($dir.FullName)"
            
            if ($LASTEXITCODE -ne 0) {
              Write-Error "Validation failed for version $version"
              exit 1
            } else {
              Write-Host "Validation successful for version $version"
            }
          }
        shell: pwsh
